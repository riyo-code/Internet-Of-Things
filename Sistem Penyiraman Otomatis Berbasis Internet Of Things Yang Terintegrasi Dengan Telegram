/**
//Developed: Sumariyo
//find me instagram: @riyomario_
/**

#include <ESP8266WiFi.h>
#include <WiFiClientSecure.h>
#include <UniversalTelegramBot.h>
#include <ArduinoJson.h>
#include <DHT.h>

#define DHTPIN 4 //atau pada nodeMCU D2
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

// Inisialisasi koneksi Wifi ke router
char ssid[] = "kambing";     // Nama WIFI
char password[] = "1sampai7"; // Password Wifi

// Initialize Telegram BOT
#define BOTtoken "1104629136:AAEQopjY4po7HPNTIxuOExFSjuWihPCDLRU"  // Bot Token Anda (Dapatkan dari Botfather)
#define CHAT_ID "785426330"  //dapatkan dari @getid

WiFiClientSecure client;
UniversalTelegramBot bot(BOTtoken, client);

int Bot_mtbs = 1000; 
long Bot_lasttime;   

bool Start = false;
bool status = false;

#define pompa 14 //atau pada nodeMCU D5
#define moisture A0 //atau pada nodeMCU A0

int kelembaban;
float t=0;
int pompaStatus = 0;
int statusMode = 0;

void handleNewMessages(int numNewMessages) {
  Serial.println("handleNewMessages");
  Serial.println(String(numNewMessages));

  for (int i=0; i<numNewMessages; i++) {
    String chat_id = String(bot.messages[i].chat_id);
    String text = bot.messages[i].text;

    String from_name = bot.messages[i].from_name;
    if (from_name == "") from_name = "Guest";


      
    if (text == "/otomatis") {
      String otomatis = "Mode Otomatis : Diaktifkan\n\n";
      otomatis += "*Pompa akan menyala otomatis jika kelembaban < 65 %\n";
      otomatis += "*Pompa akan mati otomatis jika kelembaban > 80 %";
      bot.sendMessage(chat_id, otomatis);
      statusMode = 1;
    }
    
    if (text == "/manual") {
      String manual = "Mode Manual Diaktifkan\n\n";
      manual += "/pumpon   : Untuk Menyalakan Pompa\n";
      manual += "/pumpoff  : Untuk Mematikan Pompa\n";
      manual += "/info     : Untuk Informasi Alat\n";
      bot.sendMessage(chat_id,manual, "");
      statusMode = 0;
    }
    
    if (text == "/pumpon") {
      digitalWrite(pompa, HIGH); // Menghidupkan Pompa
      bot.sendMessage(chat_id, "Pompa dinyalakan", "");
    }

    if (text == "/pumpoff") {
      digitalWrite(pompa, LOW);  // Mematikan Pompa
      bot.sendMessage(chat_id, "Pompa dimatikan", "");
    }

    t = dht.readTemperature(); //Membaca Nilai Sensor Temperature
    
    if (text == "/info") {
      sensor();
      String info = "Info untukmu " + from_name + ".\nKelembaban Tanah: ";
      info += kelembaban;
      info += "%.\nSuhu: ";
      info += t;
      info += " Celcius.\n";
      bot.sendMessage(chat_id, info);
      {
      if(pompaStatus){    // Memeriksa Status Pompa, Hidup/Mati
        bot.sendMessage(chat_id, "Saat Ini : Pompa Menyala", "");
      } else{
        bot.sendMessage(chat_id, "Saat Ini : Pompa Mati", "");
      }
      }
      {
      if(statusMode){    // Memeriksa Status Pompa, Hidup/Mati
        bot.sendMessage(chat_id, "Mode Otomatis : Aktif", "");
      } else{
        bot.sendMessage(chat_id, "Mode Manual : Aktif", "");
      }
      }
    }

    if (text == "/start") { // Text Pembuka saat Program dijalankan
      String welcome = "Selamat Datang Di Sistem Penyiraman Otomatis Berbasis Internet Of Things Yang Terintegrasi Dengan Telegram.\n\n";
      welcome += "Developed by Sumariyo\n\n";
      welcome += "SILAHKAN PILIH PERINTAH DI BAWAH INI : \n\n";
      welcome += "/start    : Untuk Memulai Program\n";
      welcome += "/otomatis : Untuk Mode Otomatis\n";
      welcome += "/manual   : Untuk Mode Manual\n\n";
      welcome += "Mode Manual Saat Ini : Aktif \n";
      bot.sendMessage(chat_id, welcome, "Markdown");
    }
  }
}


void setup() {
  pinMode(pompa, OUTPUT);
  digitalWrite(pompa, LOW);

  dht.begin();
  Serial.begin(115200);

  // Set WiFi to station mode and disconnect from an AP if it was Previously
  // connected
  WiFi.mode(WIFI_STA);
  WiFi.disconnect();
  delay(100);

  // attempt to connect to Wifi network:
  Serial.print("Connecting Wifi: ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  }

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  client.setInsecure();
  statusMode = 0;
}
void sensor (){
    kelembaban = analogRead(moisture); // Membaca Nilai Sensor Kelembaban
    kelembaban= map(kelembaban,882,487,0,100); // Mengubah Nilai Sensor Dalam Bentuk Persen
    if(kelembaban<0)kelembaban=0;                // Membatasi Nilai Sensor hanya pada 0% s/d 100 %
    else if (kelembaban>100)kelembaban=100;}
    
void loop() {
 sensor();
  if (statusMode){
    if(kelembaban<=65){digitalWrite(pompa, HIGH); // Menghidupkan Pompa Otomatis Jika Kelembaban < dari 65%
    pompaStatus = 1;
    }
    else if (kelembaban>=80){digitalWrite(pompa, LOW); // Mematikan Pompa Otomatis Jika Kelembaban > dari 80%
    pompaStatus = 0;
    }
    if (kelembaban>=59&&kelembaban<=70){
    String hidup = "Saat Ini : Pompa Menyala\n\n";
    bot.sendMessage(CHAT_ID, hidup);
    }
    else if(kelembaban>=79&&kelembaban<=90){
    String mati = "Saat Ini : Pompa Mati\n\n";
    bot.sendMessage(CHAT_ID, mati);
    }
    }
  else {}
    

  if (millis() > Bot_lasttime + Bot_mtbs)  {
    int numNewMessages = bot.getUpdates(bot.last_message_received + 1);

    while(numNewMessages) {
      Serial.println("got response");
      handleNewMessages(numNewMessages);
      numNewMessages = bot.getUpdates(bot.last_message_received + 1);
    }
  }
}      
